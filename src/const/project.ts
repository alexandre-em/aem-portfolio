import { PROJECT_CATEGORY, STATUS } from "./enum";
import mylibraryPdf from "../data/projects/DAAR_PROJECT_4.pdf";
import fortigate from "../data/projects/SECRES_TP_FORTI.pdf";
import exml from "../data/projects/Projet_ExceML_EM.pdf";

const itemData: Array<Projects> = [
  {
    id: "kanjiup",
    img: require("../data/images/projects/kanjiup.jpg"),
    title: "KanjiUp",
    date: "May 2022 - Current",
    desc: "Flascard mobile application to practice kanji drawing",
    demo: "",
    type: "markdown",
    report: null,
    git: "https://github.com/alexandre-em/kanji-up",
    status: STATUS.ONGOING,
    category: PROJECT_CATEGORY.SOFTWARE_ENGINEERING,
    skills: ["NodeJs", "TFJS", "Python", "MongoDB", "React Native"],
  },
  {
    id: "mylibrary",
    img: require("../data/images/projects/my-library.gif"),
    title: "MyLibrary",
    date: "December 2021 - January 2022",
    desc: "Indexing Books to allow searching",
    demo: "",
    type: "pdf",
    report: mylibraryPdf,
    page: 17,
    git: "https://github.com/alexandre-em/CVIndexing",
    status: STATUS.DONE,
    category: PROJECT_CATEGORY.SOFTWARE_ENGINEERING,
    skills: ["Java", "Spring", "Auth0", "SQL", "ElasticSearch", "React Native"],
  },
  {
    id: "cvindexer",
    img: require("../data/images/projects/cv-indexer.png"),
    title: "CV indexer",
    date: "November 2021",
    desc: "Indexing CV to allow searching by keyword",
    demo: "",
    type: "markdown",
    report: require("../data/projects/cvindexer.md"),
    git: "https://github.com/alexandre-em/CVIndexing",
    status: STATUS.DONE,
    category: PROJECT_CATEGORY.SOFTWARE_ENGINEERING,
    skills: [
      "Java Spring",
      "ElasticSearch",
      "Logstash",
      "Kibana",
      "ReactJs",
      "Docker",
      "Docker-compose",
      "NGINX",
    ],
  },
  {
    id: "emtuner",
    img: require("../data/images/projects/tuner.png"),
    title: "Em Tuner",
    date: "January 2022",
    desc: "Em Tuner is a guitar tuner",
    demo: "https://alexandre-em.fr/Em-tuner/",
    type: "markdown",
    report: require("../data/projects/emtuner.md"),
    git: "https://github.com/alexandre-em/Em-tuner",
    status: STATUS.DONE,
    category: PROJECT_CATEGORY.SOFTWARE_ENGINEERING,
    skills: ["ReactJs"],
  },
  {
    id: "cloud",
    img: require("../data/images/projects/cloud2.png"),
    title: "VM deploying service",
    date: "January 2022",
    desc: "Microsoft Virtual Machine deploying service",
    demo: "",
    type: "pdf",
    report: null,
    status: STATUS.DONE,
    category: PROJECT_CATEGORY.NETWORK_ENGINEERING,
    skills: ["Microsoft", "Private cloud", "VM Deployment"],
  },
  {
    id: "fortigate",
    img: require("../data/images/projects/fortigate.png"),
    title: "Certicating an application",
    date: "January 2022",
    desc: "A CA certificating an app protected with Fortigate",
    demo: "",
    type: "pdf",
    report: fortigate,
    page: 14,
    status: STATUS.DONE,
    category: PROJECT_CATEGORY.NETWORK_ENGINEERING,
    skills: ["Fortigate", "Easy-rsa", "Docker", "GNS3"],
  },
  {
    id: "minesweeper",
    img: require("../data/images/projects/minesweeper.png"),
    title: "Minesweeper",
    date: "April 2021",
    desc: "Minesweeper clone coded with Elm",
    demo: "https://minesweeper-elm.netlify.app/",
    type: "markdown",
    report: require("../data/projects/minesweeper.md"),
    git: "https://github.com/alexandre-em/minesweeper",
    status: STATUS.DONE,
    category: PROJECT_CATEGORY.SOFTWARE_ENGINEERING,
    skills: ["Elm"],
  },
  {
    id: "birdy",
    title: "Birdy",
    date: "February - June 2020",
    img: require("../data/images/projects/birdy.jpg"),
    desc: "A social network application, a twitter clone implemented during the introduction to web development course",
    demo: "",
    type: "markdown",
    report: require("../data/projects/birdy.md"),
    git: "https://github.com/alexandre-em/birdy",
    status: STATUS.DONE,
    category: PROJECT_CATEGORY.SOFTWARE_ENGINEERING,
    skills: ["Java", "servlets", "SQL", "MongoDB", "ReactJs"],
  },
  {
    id: "exml",
    date: "May 2020",
    img: require("../data/images/projects/exml.png"),
    title: "Exml",
    desc: "Excel clone coded with Ocaml",
    demo: "",
    type: "pdf",
    report: exml,
    page: 8,
    git: "https://github.com/alexandre-em/exml",
    status: STATUS.DONE,
    category: PROJECT_CATEGORY.SOFTWARE_ENGINEERING,
    skills: ["Ocaml", "Javascript"],
  },
];

export default itemData;
